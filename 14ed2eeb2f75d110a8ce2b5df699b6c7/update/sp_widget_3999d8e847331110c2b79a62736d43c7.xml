<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[api.controller = function ($scope, $interval) {
  /* widget controller */
  var c = this;
  c.orderWidgets = orderWidgets;
  c.getJobArray = getJobArray;
  c.scheduledJobs = [];
  c.widgetKey = {};
  init();


  function init() {
    if(!c.loading){
      c.loading = true;
      var input = {
        action: 'init'
      }
      c.server.get(input).then(function (response) {
        if (response && response.data) {
          var scheduledJobs = response.data.scheduledJobs;
          c.loading = false;
          loadWidgets(scheduledJobs);
        }
      })
    }
  }


  function loadWidgets(scheduledJobs) {
    for (var i = 0; i < scheduledJobs.length; i++) {
      //if (!widgetAlreadyLoaded(scheduledJobs[i].sysId)) {
      if(!c.widgetKey[scheduledJobs[i].sysId]){
        c.widgetKey[scheduledJobs[i].sysId] = {};
        loadWidget(scheduledJobs[i]);
      }
    }
  }

  function loadWidget(scheduledJob) {
    var input = {
      action: 'load_widget',
      options: {
        scheduled_job_sysid: scheduledJob.sysId,
        scheduled_job_table: scheduledJob.sysClass,
        auto_refresh_freq: 0
      }
    }
    c.server.get(input).then(function (response) {
      if (response && response.data) {
        var widget = response.data.scheduledJobWidget;
        c.scheduledJobs.push(widget);
      }
    })
  }

  // function widgetAlreadyLoaded(jobId) {
  //   for (var i = 0; i < c.scheduledJobs.length; i++) {
  //     var scheduledJob = c.scheduledJobs[i];
  //     var existingJobId = scheduledJob.options.scheduled_job_sysid;
  //     if (jobId == existingJobId) {
  //       return true;
  //     }
  //   }
  //   return false;
  // }

  function orderWidgets(v1, v2) {
    if(v1.value.data.getNextStartTime && v2.value.data.getNextStartTime){
      var v1StartTime = v1.value.data.getNextStartTime();
      var v2StartTime = v2.value.data.getNextStartTime();
      return (v1StartTime < v2StartTime) ? -1 : 1;
    }
    return 1
  }

  function getJobArray() {
    return Object.values(c.widgetKey);
  }




  $interval(init, 15000)


  //Listeners

  $scope.$on("jobs-done", function (event, scheduledJob) {
    var jobId = scheduledJob.sysId;
    delete c.widgetKey[jobId];
    for (var i = 0; i < c.scheduledJobs.length; i++) {
      var existingScheduledJob = c.scheduledJobs[i];
      var existingJobId = existingScheduledJob.options.scheduled_job_sysid;
      if (jobId === existingJobId) {
        c.scheduledJobs.splice(i, 1);
      }
    }

    init();
  });


};]]></client_script>
        <controller_as>c</controller_as>
        <css>.list-item {&#13;
    margin: 15px 0px;&#13;
}&#13;
&#13;
.scheduled-job-card:hover {&#13;
    border-color: #8d8d8d;&#13;
    cursor: pointer;&#13;
}&#13;
</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>jobutils_list</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>Scheduled Job List</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
  /* populate the 'data' object */
  /* e.g., data.table = $sp.getValue('table'); */
 
	
	if(input){
    var controller = new JobUtilsController();
    if(input.action === 'init'){
      data.scheduledJobs = controller.getScheduledJobs();
    }

    if(input.action === 'load_widget'){
      data.scheduledJobWidget = $sp.getWidget("jobutils_card", input.options);
    }

  }
	
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>erik.anderson</sys_created_by>
        <sys_created_on>2022-12-12 16:58:27</sys_created_on>
        <sys_id>3999d8e847331110c2b79a62736d43c7</sys_id>
        <sys_name>Scheduled Job List</sys_name>
        <sys_package display_value="Scheduled Job Utilities" source="x_156954_sch_util">14ed2eeb2f75d110a8ce2b5df699b6c7</sys_package>
        <sys_policy/>
        <sys_scope display_value="Scheduled Job Utilities">14ed2eeb2f75d110a8ce2b5df699b6c7</sys_scope>
        <sys_update_name>sp_widget_3999d8e847331110c2b79a62736d43c7</sys_update_name>
        <template><![CDATA[<div>
    <!-- <pre>{{c.scheduledJobs| json}}</pre> -->
    <div class="list-item" ng-repeat="scheduledJob in c.scheduledJobs | orderBy:'':false:c.orderWidgets" ng-if="scheduledJob.data">
        <sp-widget widget="scheduledJob"></sp-widget>
    </div>
</div>]]></template>
    </sp_widget>
</record_update>
